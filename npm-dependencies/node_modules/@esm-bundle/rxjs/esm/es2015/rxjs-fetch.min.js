/* rxjs@6.6.3 */
import{O as e,S as r}from"./rxjs-shared.min.js";import"./rxjs-shared.min8.js";import{f as t}from"./rxjs-shared.min6.js";function n(n,o={}){const{selector:s}=o,a=function(e,r){var t={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(n=Object.getOwnPropertySymbols(e);o<n.length;o++)r.indexOf(n[o])<0&&Object.prototype.propertyIsEnumerable.call(e,n[o])&&(t[n[o]]=e[n[o]])}return t}(o,["selector"]);return new e(e=>{const o=new AbortController,i=o.signal;let l=!0,c=!1;const b=new r;let f;if(b.add(()=>{c=!0,l&&o.abort()}),a){if(a.signal)if(a.signal.aborted)o.abort();else{const e=a.signal,r=()=>{i.aborted||o.abort()};e.addEventListener("abort",r),b.add(()=>e.removeEventListener("abort",r))}f=Object.assign({},a,{signal:i})}else f={signal:i};return fetch(n,f).then(r=>{s?b.add(t(s(r)).subscribe(r=>e.next(r),r=>{l=!1,c||e.error(r)},()=>{l=!1,e.complete()})):(l=!1,e.next(r),e.complete())}).catch(r=>{l=!1,c||e.error(r)}),b})}export{n as fromFetch};
