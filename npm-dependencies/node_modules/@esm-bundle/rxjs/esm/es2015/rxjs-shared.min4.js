/* rxjs@6.6.3 */
import{e,S as s}from"./rxjs-shared.min.js";import{A as t,a as i,N as r,S as n,O as h,g as u}from"./rxjs-shared.min3.js";const o=new class extends i{}(class extends t{constructor(e,s){super(e,s),this.scheduler=e,this.work=s}schedule(e,s=0){return s>0?super.schedule(e,s):(this.delay=s,this.state=e,this.scheduler.flush(this),this)}execute(e,s){return s>0||this.closed?super.execute(e,s):this._execute(e,s)}requestAsyncId(e,s,t=0){return null!==t&&t>0||null===t&&this.delay>0?super.requestAsyncId(e,s,t):e.flush(this)}}),c=o;function d(e,s=0){return function(t){return t.lift(new l(e,s))}}class l{constructor(e,s=0){this.scheduler=e,this.delay=s}call(e,s){return s.subscribe(new a(e,this.scheduler,this.delay))}}class a extends e{constructor(e,s,t=0){super(e),this.scheduler=s,this.delay=t}static dispatch(e){const{notification:s,destination:t}=e;s.observe(t),this.unsubscribe()}scheduleMessage(e){this.destination.add(this.scheduler.schedule(a.dispatch,this.delay,new f(e,this.destination)))}_next(e){this.scheduleMessage(r.createNext(e))}_error(e){this.scheduleMessage(r.createError(e)),this.unsubscribe()}_complete(){this.scheduleMessage(r.createComplete()),this.unsubscribe()}}class f{constructor(e,s){this.notification=e,this.destination=s}}class p extends n{constructor(e=Number.POSITIVE_INFINITY,s=Number.POSITIVE_INFINITY,t){super(),this.scheduler=t,this._events=[],this._infiniteTimeWindow=!1,this._bufferSize=e<1?1:e,this._windowTime=s<1?1:s,s===Number.POSITIVE_INFINITY?(this._infiniteTimeWindow=!0,this.next=this.nextInfiniteTimeWindow):this.next=this.nextTimeWindow}nextInfiniteTimeWindow(e){if(!this.isStopped){const s=this._events;s.push(e),s.length>this._bufferSize&&s.shift()}super.next(e)}nextTimeWindow(e){this.isStopped||(this._events.push(new m(this._getNow(),e)),this._trimBufferThenGetEvents()),super.next(e)}_subscribe(e){const t=this._infiniteTimeWindow,i=t?this._events:this._trimBufferThenGetEvents(),r=this.scheduler,n=i.length;let o;if(this.closed)throw new h;if(this.isStopped||this.hasError?o=s.EMPTY:(this.observers.push(e),o=new u(this,e)),r&&e.add(e=new a(e,r)),t)for(let s=0;s<n&&!e.closed;s++)e.next(i[s]);else for(let s=0;s<n&&!e.closed;s++)e.next(i[s].value);return this.hasError?e.error(this.thrownError):this.isStopped&&e.complete(),o}_getNow(){return(this.scheduler||c).now()}_trimBufferThenGetEvents(){const e=this._getNow(),s=this._bufferSize,t=this._windowTime,i=this._events,r=i.length;let n=0;for(;n<r&&!(e-i[n].time<t);)n++;return r>s&&(n=Math.max(n,r-s)),n>0&&i.splice(0,n),i}}class m{constructor(e,s){this.time=e,this.value=s}}export{p as R,o as a,d as o,c as q};
